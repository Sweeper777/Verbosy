###header
using System;

public struct VerbosyValue {
    public bool isChar;
    public int value;
    public static VerbosyValue FromChar(char c) {
        VerbosyValue v = new VerbosyValue();
        v.value = c;
        v.isChar = true;
        return v;
    }
    public static VerbosyValue FromInt(int i) {
        VerbosyValue v = new VerbosyValue();
        v.value = i;
        return v;
    }
    public override string ToString() {
        if (isChar) {
            return ((char)value).ToString();
        } else {
            return value.ToString() + " ";
        }
    }
}


public class Program {

    private static bool TryGetParameter(int parameter, bool pointer, out int outParam) {
        if (pointer)
        {
            if (memory[parameter] != null && current != null && memory[parameter].Value.value < memory.Length)
            {
                outParam = memory[parameter].Value.value;
                return true;
            }
            else
            {
                outParam = 0;
                return false;
            }
        }
        else
        {
            outParam = parameter;
            return true;
        }
    }

